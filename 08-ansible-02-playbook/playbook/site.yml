---
- name: Install Clickhouse
  hosts: clickhouse
  handlers:
    - name: Start clickhouse service
      become: true
      ansible.builtin.service:
        name: clickhouse-server
        state: restarted

  tasks:
    - name: Get clickhouse packages
      block:
        - name: Get clickhouse-server & client distrib
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/rpm/stable/{{ item }}-{{ clickhouse_version }}.noarch.rpm"
            dest: "./{{ item }}-{{ clickhouse_version }}.rpm"
            mode: "0700"
          with_items: "{{ clickhouse_packages }}"
          check_mode: false
      rescue:
        - name: Get clickhouse-common-static distrib
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/rpm/stable/clickhouse-common-static-{{ clickhouse_version }}.x86_64.rpm"
            dest: "./clickhouse-common-static-{{ clickhouse_version }}.rpm"
            mode: "0700"

    - name: Install clickhouse packages
      become: true
      ansible.builtin.yum:
        name:
          - clickhouse-common-static-{{ clickhouse_version }}.rpm
          - clickhouse-client-{{ clickhouse_version }}.rpm
          - clickhouse-server-{{ clickhouse_version }}.rpm
      notify: Start clickhouse service

#    - name: Clickhouse-server status
#      ansible.builtin.command: "systemctl status clickhouse-server"
#      become: true
#      register: clickhouse_status
#      changed_when: clickhouse_status.rc != 0 and clickhouse_status.rc == 3
#      notify: Start clickhouse service

    - name: Flush handlers
      ansible.builtin.meta: flush_handlers

    - name: Clickhouse. Waiting while clickhouse-server is available...
      ansible.builtin.pause:
        seconds: 10
        echo: false

    - name: Create database
      ansible.builtin.command: "clickhouse-client -q 'create database {{ clickhouse_database }};'"
      register: create_db
      failed_when: create_db.rc != 0 and create_db.rc != 82
      changed_when: create_db.rc == 0

    - name: Create table
      ansible.builtin.command: "clickhouse-client -q 'create table {{ clickhouse_database }}.{{ clickhouse_table }};'"
      register: create_table
      failed_when: create_table.rc != 0 and create_table.rc != 57
      changed_when: create_table.rc == 0

- name: Install Vector
  hosts: clickhouse
  handlers:
    - name: Restart vector service
      become: true
      ansible.builtin.systemd:
        name: vector
        state: restarted
        daemon_reload: true

  tasks:
    - name: Install Vector | YUM install
      become: true
      ansible.builtin.yum:
        name: https://packages.timber.io/vector/{{ vector_version }}/vector-{{ vector_version }}-1.{{ ansible_architecture }}.rpm
        state: present
      notify: Restart vector service

    - name: Flush handlers
      ansible.builtin.meta: flush_handlers

    - name: Configure Vector | ensure what directory exists
      become: true
      ansible.builtin.file:
        path: "{{ vector_config_dir }}"
        state: directory
        mode: "0644"
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_gid }}"

    - name: Configure Vector | Template config
      become: true
      ansible.builtin.template:
        src: vector.yml.j2
        mode: "0644"
        dest: "{{ vector_config_dir }}/vector.yml"
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_gid }}"
#        validate: vector validate --no-environment --config-yaml %s

    - name: Configure Service | Template systemd unit
      become: true
      ansible.builtin.template:
        src: vector.service.j2
        dest: /etc/systemd/system/vector.service
        mode: "0644"
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_gid }}"
      notify: Restart vector service
    - name: Start Vector
      become: true
      ansible.builtin.systemd:
        name: vector
        state: started
        daemon_reload: true